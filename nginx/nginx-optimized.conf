# Nginx Configuration - Optimized for Production
# Email Marketing Platform
# Phase 6: Production Optimization
#
# Features:
# - HTTP/2 support
# - SSL/TLS optimization
# - Gzip compression
# - Static asset caching
# - Security headers
# - Rate limiting
# - Connection pooling
# - Performance tuning

# Number of worker processes (auto = number of CPU cores)
worker_processes auto;

# Maximum number of open files per worker
worker_rlimit_nofile 65535;

# Error log configuration
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    # Maximum connections per worker
    worker_connections 4096;

    # Use epoll for Linux (efficient event notification)
    use epoll;

    # Accept multiple connections at once
    multi_accept on;
}

http {
    # Include MIME types
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log main;

    # Hide nginx version
    server_tokens off;

    # Enable sendfile for efficient file transmission
    sendfile on;

    # Send headers in one packet
    tcp_nopush on;

    # Don't buffer data-sends (disable Nagle algorithm)
    tcp_nodelay on;

    # Timeout for keep-alive connections
    keepalive_timeout 65;
    keepalive_requests 100;

    # Client body/header buffer sizes
    client_body_buffer_size 128k;
    client_max_body_size 10m;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 16k;

    # Timeouts
    client_body_timeout 12;
    client_header_timeout 12;
    send_timeout 10;

    # Reset lingering timed out connections
    reset_timedout_connection on;

    # Gzip Compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_min_length 1000;
    gzip_disable "msie6";
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/x-javascript
        application/xml
        application/xml+rss
        application/xhtml+xml
        application/x-font-ttf
        application/x-font-opentype
        application/vnd.ms-fontobject
        image/svg+xml
        image/x-icon
        application/rss+xml
        application/atom+xml;

    # Brotli Compression (if module is available)
    # brotli on;
    # brotli_comp_level 6;
    # brotli_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Open file cache
    open_file_cache max=10000 inactive=30s;
    open_file_cache_valid 60s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;

    # Rate Limiting Zones
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=tracking:10m rate=100r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;
    limit_req_status 429;

    # Connection Limiting
    limit_conn_zone $binary_remote_addr zone=addr:10m;

    # Upstream Backend Servers
    upstream backend {
        server backend:3001;

        # Connection pooling
        keepalive 32;
        keepalive_timeout 60s;
        keepalive_requests 100;
    }

    upstream frontend {
        server frontend:80;

        # Connection pooling
        keepalive 16;
    }

    # HTTP Server - Redirect to HTTPS
    server {
        listen 80;
        listen [::]:80;
        server_name marketing.myndsolution.com;

        # Let's Encrypt challenge location
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
            allow all;
        }

        # Redirect all other HTTP traffic to HTTPS
        location / {
            return 301 https://$server_name$request_uri;
        }
    }

    # HTTPS Server - Main Application
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name marketing.myndsolution.com;

        # SSL Certificate Configuration
        ssl_certificate /etc/nginx/ssl/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/privkey.pem;

        # Include SSL parameters (created in Phase 6)
        include /etc/nginx/snippets/ssl-params.conf;

        # Include security headers (created in Phase 6)
        include /etc/nginx/snippets/security-headers.conf;

        # Connection limiting
        limit_conn addr 10;

        # Root location - Frontend Application
        location / {
            proxy_pass http://frontend;
            proxy_http_version 1.1;

            # WebSocket support
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            # Proxy headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;

            # Timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;

            # Buffering
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            proxy_busy_buffers_size 8k;

            # Cache control (allow caching for static assets)
            # Override the default no-cache header from security-headers.conf
            location ~* \.(jpg|jpeg|png|gif|ico|css|js|svg|woff|woff2|ttf|eot)$ {
                proxy_pass http://frontend;
                expires 1y;
                add_header Cache-Control "public, immutable";
                access_log off;
            }
        }

        # API Endpoints - Backend Application
        location /api {
            # Rate limiting
            limit_req zone=api burst=20 nodelay;

            # Special rate limiting for login endpoint
            location /api/auth/login {
                limit_req zone=login burst=3 nodelay;
                proxy_pass http://backend;
                include /etc/nginx/snippets/proxy-params.conf;
            }

            proxy_pass http://backend;
            proxy_http_version 1.1;

            # Keep-alive connection to backend
            proxy_set_header Connection "";

            # Proxy headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;

            # Timeouts (longer for API operations)
            proxy_connect_timeout 60s;
            proxy_send_timeout 120s;
            proxy_read_timeout 120s;

            # Buffering
            proxy_buffering on;
            proxy_buffer_size 8k;
            proxy_buffers 16 8k;
            proxy_busy_buffers_size 16k;

            # Disable caching for API responses
            proxy_no_cache 1;
            proxy_cache_bypass 1;
        }

        # Tracking Endpoints - High Performance
        location /track {
            # High rate limit for tracking
            limit_req zone=tracking burst=200 nodelay;

            proxy_pass http://backend;
            proxy_http_version 1.1;

            # Keep-alive connection
            proxy_set_header Connection "";

            # Minimal headers for performance
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Fast timeouts
            proxy_connect_timeout 5s;
            proxy_send_timeout 5s;
            proxy_read_timeout 5s;

            # Minimal buffering
            proxy_buffering off;

            # Disable logging for performance
            access_log off;

            # No caching
            add_header Cache-Control "no-store, no-cache, must-revalidate" always;
            add_header Pragma "no-cache" always;
        }

        # Health Check Endpoint - Monitoring
        location /api/health {
            proxy_pass http://backend;
            proxy_http_version 1.1;
            proxy_set_header Connection "";

            # Fast timeouts
            proxy_connect_timeout 5s;
            proxy_read_timeout 5s;

            # Disable logging
            access_log off;

            # No rate limiting for health checks
        }

        # Metrics Endpoint - Monitoring (authenticated)
        location /api/health/metrics {
            proxy_pass http://backend;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            access_log off;
        }

        # Static Files - Cached
        location ~* \.(jpg|jpeg|png|gif|ico|svg|webp)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            access_log off;
            try_files $uri @frontend;
        }

        location ~* \.(css|js|woff|woff2|ttf|eot|otf)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            access_log off;
            try_files $uri @frontend;
        }

        location @frontend {
            proxy_pass http://frontend;
        }

        # Deny access to hidden files
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }

        # Deny access to backup files
        location ~ ~$ {
            deny all;
            access_log off;
            log_not_found off;
        }

        # Custom error pages (optional)
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
    }
}
